'''

tag: stack, hash_table

20. Valid Parentheses

Easy

Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string is also considered valid.

Example 1:

Input: "()"
Output: true
Example 2:

Input: "()[]{}"
Output: true
Example 3:

Input: "(]"
Output: false
Example 4:

Input: "([)]"
Output: false
Example 5:

Input: "{[]}"
Output: true

'''
s

class Solution:
    def isValid(s: str) -> bool:    
        if len(s)%2 == 1:
            return False
        cashe = []
        hash_table = {
            '}':'{',
            ']':'[',
            ')':'('
        }
        for i in s:
            # print(i)
            if i in '{[(':
                cashe.append(i)
                # print(cashe)
            elif i in '}])':
                if len(cashe) == 0:
                    return False
                if hash_table[i] == cashe.pop():
                    continue
                else:
                    return False

        if len(cashe) != 0:
            return False
        else:
            return True

print(Solution.isValid(s))        